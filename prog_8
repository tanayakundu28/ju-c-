#include<iostream>
#include<iomanip>
#include<fstream>
#include<cstring>
using namespace std;

class Record{
    int roll;
    char name[20],branch[20];
    float m1,m2,m3,m4,m5,total;
    public:
        void get_data();
        void show_head();
        void show_data();
        void add_data();
        void view_data();
        void search_data();
        void delete_data();
        void update_data();
};

void Record::show_head(){
    cout<<left;
    cout<<"\n"<<setw(10)<<"ROLL"<<setw(10)<<"NAME"<<setw(10)<<"BRANCH"<<setw(10)<<"MARKS-1"<<setw(10)<<"MARKS-2"<<setw(10)<<"MARKS-3"<<setw(10)<<"MARKS-4"<<setw(10)<<"MARKS-5"<<setw(10)<<"TOTAL\n";
}

void Record::get_data(){
    cout<<"Enter roll: ";
    cin>>roll;
    cout<<"Enter name: ";
    cin>>name;
    cout<<"Enter branch: ";
    cin>>branch;
    cout<<"Enter marks: ";
    cin>>m1>>m2>>m3>>m4>>m5;
    total=m1+m2+m3+m4+m5;
}

void Record::show_data(){
    cout<<left;
    cout<<"\n"<<setw(10)<<roll<<setw(10)<<name<<setw(10)<<branch<<setw(10)<<m1<<setw(10)<<m2<<setw(10)<<m3<<setw(10)<<m4<<setw(10)<<m5<<setw(10)<<total;
}

void Record::add_data(){
    ofstream fout;
    fout.open("record.txt",ios::out|ios::app);
    if(!fout)
        cout<<"File can not open";
    else
        fout.write((char*)this,sizeof(*this));
    fout.close();
}

void Record::view_data(){
    ifstream fin;
    fin.open("record.txt",ios::in);
    if(!fin)
        cout<<"File not found";
    else{
        show_head();
        fin.read((char*)this,sizeof(*this));
        while(!fin.eof())
        {
            show_data();
            fin.read((char*)this,sizeof(*this));
        }
     }
    fin.close();
}

void Record::search_data(){
    ifstream fin;
    char str[20];
    int flag=0;
    fin.open("record.txt",ios::in);
    cout<<"Enter the name to search: ";
    cin>>str;
    if(!fin)
        cout<<"File not found";
    else{
        fin.read((char*)this,sizeof(*this));
        while(!fin.eof())
        {
            if(!strcmp(this->name,str))
            {
                if(flag==0)
                    show_head();
                show_data();
                flag=1;
            }
            fin.read((char*)this,sizeof(*this));
        }
        if(flag==0)
            cout<<"\nRecord not found";
    }
    fin.close();
}

void Record:: update_data(){
    int id,r=0;
    fstream file;
    file.open("record.txt",ios::in|ios::out|ios::ate);
    cout<<"\nEnter roll no.: ";
    cin>>id;
    file.seekg(0);
    if(!file)
        cout<<"File not found";
    else{
        file.read((char*)this,sizeof(*this));
        while(!file.eof())
        {
            r++;
            if(roll==id)
            {
                show_head();
                show_data();
                get_data();
                file.seekp((r-1)*sizeof(Record),ios::beg);
                file.write((char*)this,sizeof(*this));
                break;
            }
            file.read((char*)this,sizeof(*this));
        }
        if(file.eof())
            cout<<"Record not found";
    }
    file.close();
}

void Record:: delete_data(){
    ifstream fin;
    ofstream fout;
    int id;
    char x;
    fin.open("record.txt",ios::in);
    fout.open("record-1.txt",ios::out|ios::app);
    cout<<"Enter roll to delete record: ";
    cin>>id;
    if(!fin)
        cout<<"File not found";
    else{
        fin.read((char*)this,sizeof(*this));
        while(!fin.eof())
        {
            if(this->roll==id)
            {
                cout<<"\nAre you want to delete this record(y/n): ";
                cin>>x;
                if(x=='n')
                    fout.write((char*)this,sizeof(*this));
                else
                    cout<<"\nRecord is deleted";
            }
            else
                fout.write((char*)this,sizeof(*this));
            fin.read((char*)this,sizeof(*this));
        }
        fin.close();
        fout.close();
        system("erase record.txt");
        system("rename record-1.txt record.txt");
    }
}

int main()
{
    int ch;
    Record b;
    while(1){
        cout<<"\n1. Add new data: ";
        cout<<"\n2. View all data: ";
        cout<<"\n3. Search data: ";
        cout<<"\n4. Update data: ";
        cout<<"\n5. delete data: ";
        cout<<"\n6. Exit: ";
        cout<<"\n\nEnter your choice: ";
        cin>>ch;
           switch(ch){
                case 1:
                    b.get_data();
                    b.add_data();
                    cout<<endl;
                    break;
                case 2:
                    b.view_data();
                    cout<<endl;
                    break;
                case 3:
                    b.search_data();
                    cout<<endl;
                    break;
                case 4:
                    b.update_data();
                    cout<<endl;
                    break;
                case 5:
                    b.delete_data();
                    cout<<endl;
                    break;
                case 6:
                    exit(0);
                default:
                    cout<<"Enter Valid choice";
            }
    }
    return 0;
}
